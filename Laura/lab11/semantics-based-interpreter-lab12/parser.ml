type token =
  | INT_CAST
  | FLOAT_CAST
  | INT of (int)
  | FLOAT of (float)
  | VAR of (string)
  | TRUE
  | FALSE
  | SEQ
  | SKIP
  | IF
  | THEN
  | ELSE
  | WHILE
  | DO
  | DONE
  | FOR
  | LT
  | LTE
  | EQ
  | ASGNOP
  | DEREF
  | PLUS
  | MINUS
  | MUL
  | DIV
  | LPAREN
  | RPAREN
  | FUN
  | COLON
  | LET
  | REC
  | IN
  | REF
  | TINT
  | TBOOL
  | TUNIT
  | TFLOAT
  | ARROW
  | MATCH
  | WITH
  | INJL
  | INJR
  | PIPE
  | EOF
  | COM
  | FST
  | SND

open Parsing;;
let _ = parse_error;;
# 3 "parser.mly"
(* Open is used for importing another module. 
   Each file is organized as a module with the module name being the
   file name without extension where the first letter is capitalized
*)
open ImpAST  (* refer to definitions from ImpAST directly *)
open Lexing  (* Lexing is a predefined library used for lexing *)

(* Formats a string describing the location of the production being currently 
   parsed *)
let location () =  let start_pos = Parsing.symbol_start_pos () in
    let end_pos = Parsing.symbol_end_pos () in
    (start_pos.pos_fname,start_pos.pos_lnum, start_pos.pos_cnum - start_pos.pos_bol, end_pos.pos_lnum, end_pos.pos_cnum - end_pos.pos_bol)

(* Throws a ParseError with the specified location*)
let parseError loc = raise (Lexer.ParseError loc)

# 70 "parser.ml"
let yytransl_const = [|
  257 (* INT_CAST *);
  258 (* FLOAT_CAST *);
  262 (* TRUE *);
  263 (* FALSE *);
  264 (* SEQ *);
  265 (* SKIP *);
  266 (* IF *);
  267 (* THEN *);
  268 (* ELSE *);
  269 (* WHILE *);
  270 (* DO *);
  271 (* DONE *);
  272 (* FOR *);
  273 (* LT *);
  274 (* LTE *);
  275 (* EQ *);
  276 (* ASGNOP *);
  277 (* DEREF *);
  278 (* PLUS *);
  279 (* MINUS *);
  280 (* MUL *);
  281 (* DIV *);
  282 (* LPAREN *);
  283 (* RPAREN *);
  284 (* FUN *);
  285 (* COLON *);
  286 (* LET *);
  287 (* REC *);
  288 (* IN *);
  289 (* REF *);
  290 (* TINT *);
  291 (* TBOOL *);
  292 (* TUNIT *);
  293 (* TFLOAT *);
  294 (* ARROW *);
  295 (* MATCH *);
  296 (* WITH *);
  297 (* INJL *);
  298 (* INJR *);
  299 (* PIPE *);
    0 (* EOF *);
  300 (* COM *);
  301 (* FST *);
  302 (* SND *);
    0|]

let yytransl_block = [|
  259 (* INT *);
  260 (* FLOAT *);
  261 (* VAR *);
    0|]

let yylhs = "\255\255\
\001\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\002\000\002\000\002\000\002\000\002\000\002\000\
\002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
\002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\004\000\004\000\000\000"

let yylen = "\002\000\
\002\000\001\000\001\000\001\000\001\000\003\000\003\000\002\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\006\000\005\000\009\000\008\000\009\000\006\000\
\002\000\001\000\004\000\004\000\020\000\002\000\002\000\001\000\
\001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\
\003\000\002\000\002\000\005\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\032\000\039\000\040\000\033\000\034\000\038\000\
\035\000\036\000\037\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\045\000\000\000\026\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\001\000\025\000\000\000\000\000\000\000\041\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\
\003\000\004\000\005\000\000\000\000\000\000\000\020\000\000\000\
\044\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\008\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000"

let yydgoto = "\002\000\
\025\000\026\000\084\000\027\000"

let yysindex = "\003\000\
\001\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\001\003\001\003\238\254\001\003\001\003\
\241\254\251\254\001\003\001\003\051\255\051\255\001\003\001\003\
\000\000\223\002\000\000\120\003\153\003\001\003\018\255\211\255\
\014\255\249\254\023\255\018\255\080\003\000\255\001\255\128\004\
\128\004\001\003\001\003\001\003\001\003\001\003\001\003\001\003\
\001\003\000\000\000\000\001\003\001\003\161\004\000\000\001\003\
\012\255\001\003\021\255\006\255\237\254\237\254\128\004\004\005\
\004\005\004\005\160\255\160\255\051\255\051\255\186\003\219\003\
\001\003\252\003\237\254\029\004\237\254\025\255\237\254\000\000\
\000\000\000\000\000\000\037\255\037\255\001\003\000\000\194\004\
\000\000\102\255\001\003\103\255\060\255\219\255\237\254\237\254\
\000\000\237\254\227\004\001\003\029\255\128\004\001\003\039\255\
\000\000\007\255\036\255\037\255\062\004\001\003\095\004\237\254\
\001\003\128\004\001\003\249\000\227\004\128\004\033\255\001\003\
\047\003\031\255\048\255\073\255\050\255\237\254\001\001\042\255\
\001\003\128\004"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\211\000\000\000\
\000\000\000\000\000\000\245\000\000\000\000\000\000\000\055\002\
\062\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\097\002\210\001\
\232\001\187\001\111\001\149\001\029\001\069\001\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\133\000\177\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\010\002\000\000\000\000\103\002\000\000\000\000\
\000\000\045\000\001\000\089\000\000\000\000\000\000\000\000\000\
\000\000\137\002\000\000\000\000\019\002\144\002\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\179\002"

let yygindex = "\000\000\
\000\000\246\255\243\255\080\000"

let yytablesize = 1573
let yytable = "\034\000\
\010\000\028\000\029\000\001\000\031\000\032\000\079\000\030\000\
\036\000\037\000\033\000\058\000\040\000\041\000\080\000\081\000\
\082\000\083\000\057\000\054\000\006\000\007\000\008\000\009\000\
\010\000\035\000\011\000\059\000\061\000\062\000\096\000\063\000\
\064\000\065\000\066\000\067\000\068\000\069\000\070\000\097\000\
\075\000\071\000\072\000\016\000\009\000\074\000\078\000\076\000\
\085\000\077\000\093\000\004\000\005\000\006\000\007\000\008\000\
\009\000\010\000\095\000\011\000\096\000\090\000\088\000\092\000\
\104\000\094\000\110\000\112\000\097\000\097\000\120\000\015\000\
\123\000\124\000\098\000\099\000\016\000\125\000\126\000\129\000\
\102\000\106\000\107\000\019\000\108\000\000\000\000\000\000\000\
\006\000\109\000\000\000\000\000\111\000\000\000\000\000\000\000\
\000\000\000\000\116\000\114\000\038\000\039\000\117\000\000\000\
\118\000\051\000\000\000\051\000\051\000\121\000\051\000\051\000\
\127\000\000\000\000\000\051\000\051\000\000\000\130\000\051\000\
\051\000\103\000\000\000\095\000\095\000\096\000\096\000\000\000\
\101\000\000\000\000\000\000\000\027\000\051\000\097\000\097\000\
\000\000\000\000\000\000\098\000\098\000\000\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
\000\000\051\000\000\000\051\000\000\000\000\000\000\000\000\000\
\004\000\005\000\006\000\007\000\008\000\009\000\010\000\051\000\
\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\028\000\000\000\051\000\000\000\015\000\051\000\000\000\048\000\
\049\000\016\000\000\000\000\000\051\000\000\000\051\000\000\000\
\019\000\051\000\000\000\000\000\051\000\051\000\000\000\000\000\
\051\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\051\000\042\000\004\000\005\000\006\000\007\000\008\000\
\009\000\010\000\042\000\011\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\043\000\044\000\000\000\045\000\015\000\
\046\000\047\000\048\000\049\000\016\000\055\000\000\000\000\000\
\095\000\000\000\096\000\019\000\043\000\105\000\000\000\000\000\
\000\000\000\000\000\000\097\000\000\000\000\000\056\000\000\000\
\098\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
\010\000\010\000\000\000\010\000\010\000\000\000\010\000\010\000\
\000\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
\010\000\010\000\010\000\010\000\013\000\010\000\000\000\000\000\
\010\000\000\000\000\000\000\000\000\000\000\000\010\000\000\000\
\010\000\000\000\000\000\010\000\010\000\009\000\009\000\009\000\
\009\000\009\000\009\000\009\000\009\000\009\000\000\000\009\000\
\009\000\000\000\009\000\009\000\000\000\009\000\009\000\009\000\
\009\000\009\000\009\000\009\000\014\000\009\000\009\000\009\000\
\000\000\009\000\000\000\000\000\009\000\000\000\000\000\000\000\
\000\000\000\000\009\000\000\000\009\000\000\000\000\000\009\000\
\009\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
\006\000\006\000\000\000\006\000\006\000\000\000\006\000\006\000\
\000\000\006\000\006\000\006\000\006\000\006\000\011\000\006\000\
\000\000\006\000\006\000\006\000\000\000\006\000\000\000\000\000\
\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\006\000\000\000\000\000\006\000\006\000\027\000\027\000\027\000\
\027\000\027\000\027\000\027\000\027\000\027\000\000\000\027\000\
\027\000\000\000\027\000\027\000\012\000\027\000\027\000\000\000\
\027\000\027\000\000\000\027\000\000\000\027\000\027\000\027\000\
\000\000\027\000\000\000\000\000\027\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\027\000\000\000\000\000\027\000\
\027\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
\028\000\028\000\015\000\028\000\028\000\000\000\028\000\028\000\
\000\000\028\000\028\000\000\000\028\000\028\000\000\000\028\000\
\000\000\028\000\028\000\028\000\000\000\028\000\000\000\000\000\
\028\000\017\000\000\000\042\000\042\000\000\000\000\000\000\000\
\028\000\000\000\042\000\028\000\028\000\042\000\042\000\000\000\
\042\000\042\000\000\000\042\000\042\000\000\000\042\000\016\000\
\042\000\042\000\042\000\042\000\000\000\042\000\000\000\042\000\
\000\000\000\000\042\000\000\000\000\000\043\000\043\000\000\000\
\000\000\000\000\042\000\000\000\043\000\042\000\042\000\043\000\
\043\000\000\000\043\000\043\000\000\000\043\000\043\000\000\000\
\043\000\019\000\043\000\043\000\043\000\043\000\095\000\043\000\
\096\000\043\000\021\000\119\000\043\000\000\000\095\000\000\000\
\096\000\097\000\000\000\128\000\043\000\000\000\098\000\043\000\
\043\000\097\000\000\000\000\000\013\000\000\000\098\000\013\000\
\013\000\000\000\013\000\013\000\000\000\013\000\013\000\000\000\
\013\000\000\000\013\000\013\000\013\000\013\000\030\000\013\000\
\000\000\013\000\000\000\000\000\013\000\031\000\000\000\000\000\
\000\000\000\000\000\000\000\000\013\000\000\000\000\000\013\000\
\013\000\000\000\000\000\000\000\014\000\000\000\000\000\014\000\
\014\000\000\000\014\000\014\000\000\000\014\000\014\000\000\000\
\014\000\000\000\014\000\014\000\014\000\014\000\000\000\014\000\
\018\000\014\000\000\000\000\000\014\000\000\000\024\000\000\000\
\000\000\000\000\000\000\000\000\014\000\000\000\000\000\014\000\
\014\000\000\000\000\000\000\000\000\000\000\000\011\000\000\000\
\000\000\011\000\011\000\000\000\011\000\011\000\000\000\011\000\
\011\000\000\000\011\000\000\000\011\000\011\000\000\000\000\000\
\022\000\011\000\000\000\011\000\000\000\000\000\011\000\023\000\
\000\000\000\000\000\000\000\000\000\000\000\000\011\000\000\000\
\000\000\011\000\011\000\000\000\012\000\000\000\000\000\012\000\
\012\000\000\000\012\000\012\000\000\000\012\000\012\000\000\000\
\012\000\000\000\012\000\012\000\000\000\000\000\000\000\012\000\
\000\000\012\000\029\000\000\000\012\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\012\000\000\000\000\000\012\000\
\012\000\000\000\015\000\000\000\000\000\015\000\015\000\000\000\
\015\000\015\000\000\000\015\000\015\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\015\000\000\000\015\000\
\000\000\017\000\015\000\000\000\017\000\017\000\050\000\017\000\
\017\000\000\000\015\000\000\000\000\000\015\000\015\000\000\000\
\000\000\000\000\000\000\000\000\017\000\000\000\017\000\016\000\
\000\000\017\000\016\000\016\000\000\000\016\000\016\000\000\000\
\000\000\017\000\000\000\000\000\017\000\017\000\000\000\000\000\
\000\000\000\000\016\000\000\000\016\000\000\000\000\000\016\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\
\000\000\019\000\016\000\016\000\019\000\019\000\000\000\019\000\
\019\000\000\000\021\000\000\000\000\000\021\000\021\000\000\000\
\021\000\021\000\000\000\000\000\019\000\000\000\019\000\000\000\
\000\000\019\000\000\000\000\000\000\000\021\000\000\000\021\000\
\000\000\019\000\021\000\000\000\019\000\019\000\000\000\000\000\
\000\000\000\000\021\000\000\000\000\000\021\000\021\000\000\000\
\000\000\030\000\030\000\000\000\030\000\030\000\000\000\000\000\
\031\000\031\000\000\000\031\000\031\000\000\000\000\000\000\000\
\000\000\030\000\000\000\030\000\000\000\000\000\030\000\000\000\
\031\000\000\000\031\000\000\000\000\000\031\000\030\000\000\000\
\000\000\030\000\030\000\000\000\000\000\031\000\000\000\000\000\
\031\000\031\000\000\000\018\000\018\000\000\000\018\000\018\000\
\000\000\024\000\024\000\000\000\024\000\024\000\000\000\000\000\
\000\000\000\000\000\000\018\000\000\000\018\000\000\000\000\000\
\018\000\024\000\000\000\024\000\000\000\000\000\024\000\000\000\
\018\000\000\000\000\000\018\000\018\000\000\000\024\000\000\000\
\000\000\024\000\024\000\022\000\022\000\000\000\022\000\022\000\
\000\000\000\000\023\000\023\000\000\000\023\000\023\000\000\000\
\000\000\000\000\000\000\022\000\000\000\022\000\000\000\000\000\
\022\000\000\000\023\000\000\000\023\000\000\000\000\000\023\000\
\022\000\000\000\000\000\022\000\022\000\000\000\000\000\023\000\
\000\000\000\000\023\000\023\000\000\000\029\000\029\000\000\000\
\029\000\029\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\029\000\000\000\029\000\
\000\000\000\000\029\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\029\000\000\000\000\000\029\000\029\000\004\000\
\005\000\006\000\007\000\008\000\009\000\010\000\042\000\011\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\043\000\
\044\000\000\000\045\000\015\000\046\000\047\000\048\000\049\000\
\016\000\000\000\000\000\000\000\000\000\000\000\000\000\019\000\
\003\000\004\000\005\000\006\000\007\000\008\000\009\000\010\000\
\000\000\011\000\012\000\000\000\000\000\013\000\000\000\000\000\
\014\000\000\000\000\000\000\000\000\000\015\000\000\000\000\000\
\000\000\000\000\016\000\000\000\017\000\000\000\018\000\000\000\
\000\000\019\000\000\000\000\000\000\000\000\000\000\000\020\000\
\000\000\021\000\022\000\000\000\000\000\023\000\024\000\004\000\
\005\000\006\000\007\000\008\000\009\000\010\000\042\000\011\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\043\000\
\044\000\000\000\045\000\015\000\046\000\047\000\048\000\049\000\
\016\000\000\000\000\000\000\000\000\000\000\000\000\000\019\000\
\004\000\005\000\006\000\007\000\008\000\009\000\010\000\042\000\
\011\000\122\000\000\000\000\000\000\000\000\000\000\000\000\000\
\043\000\044\000\000\000\045\000\015\000\046\000\047\000\048\000\
\049\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\
\019\000\000\000\000\000\000\000\000\000\000\000\000\000\060\000\
\004\000\005\000\006\000\007\000\008\000\009\000\010\000\042\000\
\011\000\000\000\052\000\000\000\000\000\000\000\000\000\000\000\
\043\000\044\000\000\000\045\000\015\000\046\000\047\000\048\000\
\049\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\
\019\000\004\000\005\000\006\000\007\000\008\000\009\000\010\000\
\042\000\011\000\000\000\000\000\000\000\000\000\053\000\000\000\
\000\000\043\000\044\000\000\000\045\000\015\000\046\000\047\000\
\048\000\049\000\016\000\000\000\000\000\000\000\000\000\000\000\
\000\000\019\000\004\000\005\000\006\000\007\000\008\000\009\000\
\010\000\042\000\011\000\000\000\000\000\086\000\000\000\000\000\
\000\000\000\000\043\000\044\000\000\000\045\000\015\000\046\000\
\047\000\048\000\049\000\016\000\000\000\000\000\000\000\000\000\
\000\000\000\000\019\000\004\000\005\000\006\000\007\000\008\000\
\009\000\010\000\042\000\011\000\000\000\000\000\000\000\000\000\
\000\000\087\000\000\000\043\000\044\000\000\000\045\000\015\000\
\046\000\047\000\048\000\049\000\016\000\000\000\000\000\000\000\
\000\000\000\000\000\000\019\000\004\000\005\000\006\000\007\000\
\008\000\009\000\010\000\042\000\011\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\043\000\044\000\000\000\045\000\
\015\000\046\000\047\000\048\000\049\000\016\000\089\000\000\000\
\000\000\000\000\000\000\000\000\019\000\004\000\005\000\006\000\
\007\000\008\000\009\000\010\000\042\000\011\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\043\000\044\000\000\000\
\045\000\015\000\046\000\047\000\048\000\049\000\016\000\000\000\
\000\000\000\000\000\000\000\000\091\000\019\000\004\000\005\000\
\006\000\007\000\008\000\009\000\010\000\042\000\011\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\043\000\044\000\
\000\000\045\000\015\000\046\000\047\000\048\000\049\000\016\000\
\113\000\000\000\000\000\000\000\000\000\000\000\019\000\004\000\
\005\000\006\000\007\000\008\000\009\000\010\000\042\000\011\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\043\000\
\044\000\000\000\045\000\015\000\046\000\047\000\048\000\049\000\
\016\000\000\000\000\000\000\000\000\000\000\000\115\000\019\000\
\004\000\005\000\006\000\007\000\008\000\009\000\010\000\042\000\
\011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\043\000\044\000\000\000\045\000\015\000\046\000\047\000\048\000\
\049\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\
\019\000\004\000\005\000\006\000\007\000\008\000\009\000\010\000\
\073\000\011\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\043\000\044\000\000\000\045\000\015\000\046\000\047\000\
\048\000\049\000\016\000\000\000\000\000\000\000\000\000\000\000\
\000\000\019\000\004\000\005\000\006\000\007\000\008\000\009\000\
\010\000\100\000\011\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\043\000\044\000\000\000\045\000\015\000\046\000\
\047\000\048\000\049\000\016\000\000\000\000\000\000\000\000\000\
\000\000\000\000\019\000\004\000\005\000\006\000\007\000\008\000\
\009\000\010\000\000\000\011\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\043\000\044\000\000\000\045\000\015\000\
\046\000\047\000\048\000\049\000\016\000\000\000\000\000\000\000\
\000\000\000\000\000\000\019\000\004\000\005\000\006\000\007\000\
\008\000\009\000\010\000\000\000\011\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\045\000\
\015\000\046\000\047\000\048\000\049\000\016\000\000\000\000\000\
\000\000\000\000\000\000\000\000\019\000"

let yycheck = "\005\001\
\000\000\012\000\013\000\001\000\015\000\016\000\026\001\026\001\
\019\000\020\000\026\001\019\001\023\000\024\000\034\001\035\001\
\036\001\037\001\005\001\030\000\003\001\004\001\005\001\006\001\
\007\001\031\001\009\001\005\001\029\001\029\001\024\001\042\000\
\043\000\044\000\045\000\046\000\047\000\048\000\049\000\033\001\
\029\001\052\000\053\000\026\001\000\000\056\000\041\001\058\000\
\062\000\029\001\026\001\001\001\002\001\003\001\004\001\005\001\
\006\001\007\001\022\001\009\001\024\001\075\000\073\000\077\000\
\005\001\079\000\038\001\029\001\033\001\033\001\038\001\021\001\
\042\001\026\001\038\001\086\000\026\001\005\001\029\001\038\001\
\091\000\095\000\096\000\033\001\098\000\255\255\255\255\255\255\
\000\000\100\000\255\255\255\255\103\000\255\255\255\255\255\255\
\255\255\255\255\112\000\110\000\021\000\022\000\113\000\255\255\
\115\000\026\000\255\255\028\000\029\000\120\000\031\000\032\000\
\126\000\255\255\255\255\036\000\037\000\255\255\129\000\040\000\
\041\000\019\001\255\255\022\001\022\001\024\001\024\001\255\255\
\027\001\255\255\255\255\255\255\000\000\054\000\033\001\033\001\
\255\255\255\255\255\255\038\001\038\001\255\255\063\000\064\000\
\065\000\066\000\067\000\068\000\069\000\070\000\071\000\072\000\
\255\255\074\000\255\255\076\000\255\255\255\255\255\255\255\255\
\001\001\002\001\003\001\004\001\005\001\006\001\007\001\088\000\
\009\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\000\000\255\255\099\000\255\255\021\001\102\000\255\255\024\001\
\025\001\026\001\255\255\255\255\109\000\255\255\111\000\255\255\
\033\001\114\000\255\255\255\255\117\000\118\000\255\255\255\255\
\121\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\130\000\000\000\001\001\002\001\003\001\004\001\005\001\
\006\001\007\001\008\001\009\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\017\001\018\001\255\255\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\255\255\255\255\
\022\001\255\255\024\001\033\001\000\000\027\001\255\255\255\255\
\255\255\255\255\255\255\033\001\255\255\255\255\044\001\255\255\
\038\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\008\001\009\001\255\255\011\001\012\001\255\255\014\001\015\001\
\255\255\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\000\000\029\001\255\255\255\255\
\032\001\255\255\255\255\255\255\255\255\255\255\038\001\255\255\
\040\001\255\255\255\255\043\001\044\001\001\001\002\001\003\001\
\004\001\005\001\006\001\007\001\008\001\009\001\255\255\011\001\
\012\001\255\255\014\001\015\001\255\255\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\000\000\025\001\026\001\027\001\
\255\255\029\001\255\255\255\255\032\001\255\255\255\255\255\255\
\255\255\255\255\038\001\255\255\040\001\255\255\255\255\043\001\
\044\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\008\001\009\001\255\255\011\001\012\001\255\255\014\001\015\001\
\255\255\017\001\018\001\019\001\020\001\021\001\000\000\023\001\
\255\255\025\001\026\001\027\001\255\255\029\001\255\255\255\255\
\032\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\040\001\255\255\255\255\043\001\044\001\001\001\002\001\003\001\
\004\001\005\001\006\001\007\001\008\001\009\001\255\255\011\001\
\012\001\255\255\014\001\015\001\000\000\017\001\018\001\255\255\
\020\001\021\001\255\255\023\001\255\255\025\001\026\001\027\001\
\255\255\029\001\255\255\255\255\032\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\040\001\255\255\255\255\043\001\
\044\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\008\001\009\001\000\000\011\001\012\001\255\255\014\001\015\001\
\255\255\017\001\018\001\255\255\020\001\021\001\255\255\023\001\
\255\255\025\001\026\001\027\001\255\255\029\001\255\255\255\255\
\032\001\000\000\255\255\001\001\002\001\255\255\255\255\255\255\
\040\001\255\255\008\001\043\001\044\001\011\001\012\001\255\255\
\014\001\015\001\255\255\017\001\018\001\255\255\020\001\000\000\
\022\001\023\001\024\001\025\001\255\255\027\001\255\255\029\001\
\255\255\255\255\032\001\255\255\255\255\001\001\002\001\255\255\
\255\255\255\255\040\001\255\255\008\001\043\001\044\001\011\001\
\012\001\255\255\014\001\015\001\255\255\017\001\018\001\255\255\
\020\001\000\000\022\001\023\001\024\001\025\001\022\001\027\001\
\024\001\029\001\000\000\027\001\032\001\255\255\022\001\255\255\
\024\001\033\001\255\255\027\001\040\001\255\255\038\001\043\001\
\044\001\033\001\255\255\255\255\008\001\255\255\038\001\011\001\
\012\001\255\255\014\001\015\001\255\255\017\001\018\001\255\255\
\020\001\255\255\022\001\023\001\024\001\025\001\000\000\027\001\
\255\255\029\001\255\255\255\255\032\001\000\000\255\255\255\255\
\255\255\255\255\255\255\255\255\040\001\255\255\255\255\043\001\
\044\001\255\255\255\255\255\255\008\001\255\255\255\255\011\001\
\012\001\255\255\014\001\015\001\255\255\017\001\018\001\255\255\
\020\001\255\255\022\001\023\001\024\001\025\001\255\255\027\001\
\000\000\029\001\255\255\255\255\032\001\255\255\000\000\255\255\
\255\255\255\255\255\255\255\255\040\001\255\255\255\255\043\001\
\044\001\255\255\255\255\255\255\255\255\255\255\008\001\255\255\
\255\255\011\001\012\001\255\255\014\001\015\001\255\255\017\001\
\018\001\255\255\020\001\255\255\022\001\023\001\255\255\255\255\
\000\000\027\001\255\255\029\001\255\255\255\255\032\001\000\000\
\255\255\255\255\255\255\255\255\255\255\255\255\040\001\255\255\
\255\255\043\001\044\001\255\255\008\001\255\255\255\255\011\001\
\012\001\255\255\014\001\015\001\255\255\017\001\018\001\255\255\
\020\001\255\255\022\001\023\001\255\255\255\255\255\255\027\001\
\255\255\029\001\000\000\255\255\032\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\040\001\255\255\255\255\043\001\
\044\001\255\255\008\001\255\255\255\255\011\001\012\001\255\255\
\014\001\015\001\255\255\017\001\018\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\027\001\255\255\029\001\
\255\255\008\001\032\001\255\255\011\001\012\001\000\000\014\001\
\015\001\255\255\040\001\255\255\255\255\043\001\044\001\255\255\
\255\255\255\255\255\255\255\255\027\001\255\255\029\001\008\001\
\255\255\032\001\011\001\012\001\255\255\014\001\015\001\255\255\
\255\255\040\001\255\255\255\255\043\001\044\001\255\255\255\255\
\255\255\255\255\027\001\255\255\029\001\255\255\255\255\032\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\040\001\
\255\255\008\001\043\001\044\001\011\001\012\001\255\255\014\001\
\015\001\255\255\008\001\255\255\255\255\011\001\012\001\255\255\
\014\001\015\001\255\255\255\255\027\001\255\255\029\001\255\255\
\255\255\032\001\255\255\255\255\255\255\027\001\255\255\029\001\
\255\255\040\001\032\001\255\255\043\001\044\001\255\255\255\255\
\255\255\255\255\040\001\255\255\255\255\043\001\044\001\255\255\
\255\255\011\001\012\001\255\255\014\001\015\001\255\255\255\255\
\011\001\012\001\255\255\014\001\015\001\255\255\255\255\255\255\
\255\255\027\001\255\255\029\001\255\255\255\255\032\001\255\255\
\027\001\255\255\029\001\255\255\255\255\032\001\040\001\255\255\
\255\255\043\001\044\001\255\255\255\255\040\001\255\255\255\255\
\043\001\044\001\255\255\011\001\012\001\255\255\014\001\015\001\
\255\255\011\001\012\001\255\255\014\001\015\001\255\255\255\255\
\255\255\255\255\255\255\027\001\255\255\029\001\255\255\255\255\
\032\001\027\001\255\255\029\001\255\255\255\255\032\001\255\255\
\040\001\255\255\255\255\043\001\044\001\255\255\040\001\255\255\
\255\255\043\001\044\001\011\001\012\001\255\255\014\001\015\001\
\255\255\255\255\011\001\012\001\255\255\014\001\015\001\255\255\
\255\255\255\255\255\255\027\001\255\255\029\001\255\255\255\255\
\032\001\255\255\027\001\255\255\029\001\255\255\255\255\032\001\
\040\001\255\255\255\255\043\001\044\001\255\255\255\255\040\001\
\255\255\255\255\043\001\044\001\255\255\011\001\012\001\255\255\
\014\001\015\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\027\001\255\255\029\001\
\255\255\255\255\032\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\040\001\255\255\255\255\043\001\044\001\001\001\
\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\017\001\
\018\001\255\255\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\255\255\255\255\255\255\255\255\255\255\255\255\033\001\
\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\255\255\009\001\010\001\255\255\255\255\013\001\255\255\255\255\
\016\001\255\255\255\255\255\255\255\255\021\001\255\255\255\255\
\255\255\255\255\026\001\255\255\028\001\255\255\030\001\255\255\
\255\255\033\001\255\255\255\255\255\255\255\255\255\255\039\001\
\255\255\041\001\042\001\255\255\255\255\045\001\046\001\001\001\
\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\017\001\
\018\001\255\255\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\255\255\255\255\255\255\255\255\255\255\255\255\033\001\
\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\
\009\001\043\001\255\255\255\255\255\255\255\255\255\255\255\255\
\017\001\018\001\255\255\020\001\021\001\022\001\023\001\024\001\
\025\001\026\001\255\255\255\255\255\255\255\255\255\255\255\255\
\033\001\255\255\255\255\255\255\255\255\255\255\255\255\040\001\
\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\
\009\001\255\255\011\001\255\255\255\255\255\255\255\255\255\255\
\017\001\018\001\255\255\020\001\021\001\022\001\023\001\024\001\
\025\001\026\001\255\255\255\255\255\255\255\255\255\255\255\255\
\033\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\008\001\009\001\255\255\255\255\255\255\255\255\014\001\255\255\
\255\255\017\001\018\001\255\255\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\255\255\255\255\255\255\255\255\255\255\
\255\255\033\001\001\001\002\001\003\001\004\001\005\001\006\001\
\007\001\008\001\009\001\255\255\255\255\012\001\255\255\255\255\
\255\255\255\255\017\001\018\001\255\255\020\001\021\001\022\001\
\023\001\024\001\025\001\026\001\255\255\255\255\255\255\255\255\
\255\255\255\255\033\001\001\001\002\001\003\001\004\001\005\001\
\006\001\007\001\008\001\009\001\255\255\255\255\255\255\255\255\
\255\255\015\001\255\255\017\001\018\001\255\255\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\255\255\255\255\255\255\
\255\255\255\255\255\255\033\001\001\001\002\001\003\001\004\001\
\005\001\006\001\007\001\008\001\009\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\017\001\018\001\255\255\020\001\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\255\255\
\255\255\255\255\255\255\255\255\033\001\001\001\002\001\003\001\
\004\001\005\001\006\001\007\001\008\001\009\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\017\001\018\001\255\255\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\255\255\
\255\255\255\255\255\255\255\255\032\001\033\001\001\001\002\001\
\003\001\004\001\005\001\006\001\007\001\008\001\009\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\017\001\018\001\
\255\255\020\001\021\001\022\001\023\001\024\001\025\001\026\001\
\027\001\255\255\255\255\255\255\255\255\255\255\033\001\001\001\
\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\017\001\
\018\001\255\255\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\255\255\255\255\255\255\255\255\255\255\032\001\033\001\
\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\
\009\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\017\001\018\001\255\255\020\001\021\001\022\001\023\001\024\001\
\025\001\026\001\255\255\255\255\255\255\255\255\255\255\255\255\
\033\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\
\008\001\009\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\017\001\018\001\255\255\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\255\255\255\255\255\255\255\255\255\255\
\255\255\033\001\001\001\002\001\003\001\004\001\005\001\006\001\
\007\001\008\001\009\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\017\001\018\001\255\255\020\001\021\001\022\001\
\023\001\024\001\025\001\026\001\255\255\255\255\255\255\255\255\
\255\255\255\255\033\001\001\001\002\001\003\001\004\001\005\001\
\006\001\007\001\255\255\009\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\017\001\018\001\255\255\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\255\255\255\255\255\255\
\255\255\255\255\255\255\033\001\001\001\002\001\003\001\004\001\
\005\001\006\001\007\001\255\255\009\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\020\001\
\021\001\022\001\023\001\024\001\025\001\026\001\255\255\255\255\
\255\255\255\255\255\255\255\255\033\001"

let yynames_const = "\
  INT_CAST\000\
  FLOAT_CAST\000\
  TRUE\000\
  FALSE\000\
  SEQ\000\
  SKIP\000\
  IF\000\
  THEN\000\
  ELSE\000\
  WHILE\000\
  DO\000\
  DONE\000\
  FOR\000\
  LT\000\
  LTE\000\
  EQ\000\
  ASGNOP\000\
  DEREF\000\
  PLUS\000\
  MINUS\000\
  MUL\000\
  DIV\000\
  LPAREN\000\
  RPAREN\000\
  FUN\000\
  COLON\000\
  LET\000\
  REC\000\
  IN\000\
  REF\000\
  TINT\000\
  TBOOL\000\
  TUNIT\000\
  TFLOAT\000\
  ARROW\000\
  MATCH\000\
  WITH\000\
  INJL\000\
  INJR\000\
  PIPE\000\
  EOF\000\
  COM\000\
  FST\000\
  SND\000\
  "

let yynames_block = "\
  INT\000\
  FLOAT\000\
  VAR\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 107 "parser.mly"
                            ( _1 )
# 662 "parser.ml"
               : ImpAST.expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 117 "parser.mly"
                               (TInt)
# 668 "parser.ml"
               : 'tip))
; (fun __caml_parser_env ->
    Obj.repr(
# 118 "parser.mly"
                               (TBool)
# 674 "parser.ml"
               : 'tip))
; (fun __caml_parser_env ->
    Obj.repr(
# 119 "parser.mly"
                               (TUnit)
# 680 "parser.ml"
               : 'tip))
; (fun __caml_parser_env ->
    Obj.repr(
# 120 "parser.mly"
                               (TFloat)
# 686 "parser.ml"
               : 'tip))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'tip) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'tip) in
    Obj.repr(
# 121 "parser.mly"
                               ( TArrow (_1, _3) )
# 694 "parser.ml"
               : 'tip))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'tip) in
    Obj.repr(
# 126 "parser.mly"
                               ( _2 )
# 701 "parser.ml"
               : 'tip))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'tip) in
    Obj.repr(
# 127 "parser.mly"
                               ( TRef _1 )
# 708 "parser.ml"
               : 'tip))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'tip) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'tip) in
    Obj.repr(
# 128 "parser.mly"
                              ( TSum (_1, _3) )
# 716 "parser.ml"
               : 'tip))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'tip) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'tip) in
    Obj.repr(
# 129 "parser.mly"
                              ( TMul (_1,_3) )
# 724 "parser.ml"
               : 'tip))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 132 "parser.mly"
                               ( Op (_1,Plus,_3, location()) )
# 732 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 135 "parser.mly"
                                ( Op (_1,Minus,_3, location()) )
# 740 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 136 "parser.mly"
                              ( Op (_1,Mul,_3, location()) )
# 748 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 137 "parser.mly"
                              ( Op (_1,Div,_3, location()) )
# 756 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 138 "parser.mly"
                                ( Atrib (_1,_3, location()) )
# 764 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 139 "parser.mly"
                               ( Op (_1, Mic, _3, location()) )
# 772 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 140 "parser.mly"
                              ( Op (_1, MicS, _3, location()) )
# 780 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 141 "parser.mly"
                               ( Secv (_1,_3, location()) )
# 788 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 143 "parser.mly"
                               ( If (_2, _4, _6, location()) )
# 797 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 161 "parser.mly"
                               ( While (_2, _4, location()) )
# 805 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 6 : 'expr) in
    let _5 = (Parsing.peek_val __caml_parser_env 4 : 'expr) in
    let _7 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _9 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 163 "parser.mly"
                               ( For (_3, _5, _7, _9, location()) )
# 815 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _5 = (Parsing.peek_val __caml_parser_env 3 : 'tip) in
    let _8 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 165 "parser.mly"
                               ( Fun (_3, _5, _8, location()) )
# 824 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _5 = (Parsing.peek_val __caml_parser_env 4 : 'tip) in
    let _7 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _9 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 167 "parser.mly"
                               ( LetRec (_3, _5, _7, _9, location()) )
# 834 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 169 "parser.mly"
                               ( Let (_2, _4, _6, location()) )
# 843 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'funexpr) in
    Obj.repr(
# 170 "parser.mly"
                               ( App (_1, _2, location()) )
# 851 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'funexpr) in
    Obj.repr(
# 174 "parser.mly"
                               ( _1 )
# 858 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'funexpr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'tip) in
    Obj.repr(
# 177 "parser.mly"
                               ( InjL(_2, _4, location()) )
# 866 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'funexpr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'tip) in
    Obj.repr(
# 178 "parser.mly"
                               ( InjR(_2, _4, location()) )
# 874 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 18 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 14 : string) in
    let _8 = (Parsing.peek_val __caml_parser_env 12 : 'tip) in
    let _11 = (Parsing.peek_val __caml_parser_env 9 : 'expr) in
    let _15 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _17 = (Parsing.peek_val __caml_parser_env 3 : 'tip) in
    let _20 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 182 "parser.mly"
                               ( Match(_2, Fun(_6, _8, _11, location()),
                                           Fun(_15, _17, _20, location()), 
                                           location()) )
# 889 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 186 "parser.mly"
                               (Fst(_2,location()))
# 896 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 187 "parser.mly"
                               (Snd(_2,location()))
# 903 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 188 "parser.mly"
                               ( parseError (location ()) )
# 909 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 192 "parser.mly"
                               ( Int (_1,location()) )
# 916 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : float) in
    Obj.repr(
# 193 "parser.mly"
                               ( Float (_1,location()) )
# 923 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 194 "parser.mly"
                               ( Bool (true, location()) )
# 929 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 195 "parser.mly"
                               ( Bool (false, location()) )
# 935 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 196 "parser.mly"
                               ( Skip (location()) )
# 941 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 197 "parser.mly"
                               ( Var (_1,location()) )
# 948 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 198 "parser.mly"
                               ( IntOfFloat (location()) )
# 954 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 199 "parser.mly"
                               ( FloatOfInt (location()) )
# 960 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 200 "parser.mly"
                               ( _2 )
# 967 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 204 "parser.mly"
                               ( Deref (_2, location()) )
# 974 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 205 "parser.mly"
                               ( Ref (_2, location()) )
# 981 "parser.ml"
               : 'funexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 206 "parser.mly"
                                ( Pair(_2,_4,location()) )
# 989 "parser.ml"
               : 'funexpr))
(* Entry main *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let main (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : ImpAST.expr)
